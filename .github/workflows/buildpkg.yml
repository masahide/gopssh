name: Go package

on:
  push:
    tags:
      - 'v*.*.*'

env:
  GO_VERSION: '1.19'
  APP_NAME: 'gopssh'
  MAIN_GO: 'cmd/gopssh/main.go'

jobs:

  # go build
  build-binary:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
          - goos: [darwin, windows, linux]
          - goarch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Test
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go test -v ./...

      - name: Get the info
        id: info
        run: |
          echo "ver=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT
          echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: show info
        run: |
          echo "version: ${{ steps.info.outputs.ver }}" >> $GITHUB_STEP_SUMMARY
          echo "commit:  ${{ steps.info.outputs.hash }}" >> $GITHUB_STEP_SUMMARY
          echo "date:    $(date --iso-8601=seconds)" >> $GITHUB_STEP_SUMMARY

      - name: Build
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v \
            -ldflags "-X main.version=${{ steps.info.outputs.ver }}
            -X main.commit=${{ steps.info.outputs.hash }}
            -X main.date=$(date --iso-8601=seconds)" \
            -o .bin/${{ env.APP_NAME }} \
            ${{ env.MAIN_GO }}

      - uses: actions/upload-artifact@v3
        with:
          name: bin-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            .bin/*

  # build rpm, deb packages
  build-linux-packages:
    runs-on: ubuntu-22.04
    needs: build-binary
    strategy:
      matrix:
          - goarch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/download-artifact@v3
        with:
          name: bin-linux-${{ matrix.goarch }}

      - name: Build Linux RPM Packages
        run: |
          case ${{ matrix.goarch }} in
            "amd64") arch=x86_64;;
            "arm64") arch=aarch64;;
          esac
          GOARCH=${{ matrix.goarch }} \
          NAME=${{ env.APP_NAME }} \
          VERSION=${{ steps.info.outputs.ver }} \
          HASH=${{ steps.info.outputs.hash }} \
          ARCH=$arch" \
          RELEASE=1 \
          BINPATH=.bin/${{ env.APP_NAME }} \
          go run cmd/rpmpack/main.go

      - name: Build Linux DEB Packages
        run: |
          GOARCH=${{ matrix.goarch }} \
          VERSION=${{ steps.info.outputs.ver }} \
          ARCH=${{ matrix.goarch }} \
          NAME=${{ env.APP_NAME }} \
          BINPATH=.bin/${{ env.APP_NAME }} \
          go run cmd/debpack/main.go

      - uses: actions/upload-artifact@v3
        with:
          name: linux-rpm-${{ matrix.goarch }}
          path: |
            ./*.rpm

      - uses: deb
        with:
          name: linux-deb-${{ matrix.goarch }}
          path: |
            ./*.deb

      - name: show info
        run: |
          echo "ls -la" >> $GITHUB_STEP_SUMMARY
          ls -la >> $GITHUB_STEP_SUMMARY

