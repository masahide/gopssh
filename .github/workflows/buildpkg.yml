name: Go package

on:
  push:
    tags:
      - 'v*.*.*'

env:
  GO_VERSION: '1.19'
  APP_NAME: 'gopssh'

jobs:
  build-binary:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Test
        run: go test -v ./...

      - name: Get the info
        id: info
        run: |
          echo "ver=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT
          echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: show info
        run: |
          echo "version: ${{ steps.info.outputs.ver }}" >> $GITHUB_STEP_SUMMARY
          echo "commit:  ${{ steps.info.outputs.hash }}" >> $GITHUB_STEP_SUMMARY
          echo "date:    $(date --iso-8601=seconds)" >> $GITHUB_STEP_SUMMARY

      - name: Build
        run: go build -v -ldflags "-X main.version=${{ steps.info.outputs.ver }} -X main.commit=${{ steps.info.outputs.hash }} -X main.date=$(date --iso-8601=seconds)" -o .bin/gopssh cmd/gopssh/main.go

      - name: Build Linux DEB Packages
        uses: kentik/pkg@v1.0.0-rc8
        with:
          name: ${{ env.APP_NAME }}
          version: ${{ steps.info.outputs.ver }}
          arch: x86_64
          format: rpm
          package: package.yml

      # Build RPM Package
      - name: Build Linux RPM Packages
        uses: masahide/docker-rpmbuild@v0.0.1
        id: rpm
        with:
          spec: rpm.sec
          version: ${{ steps.info.outputs.ver }}


      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}.deb
          path: |
            ./*.deb
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.rpm.outputs.rpmfiles }}
          path: |
            ./*.rpm
            !./*-debuginfo-*.rpm

      - name: show info
        run: |
          echo "ls -la" >> $GITHUB_STEP_SUMMARY
          ls -la >> $GITHUB_STEP_SUMMARY

